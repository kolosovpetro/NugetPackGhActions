name: Run .NET SonarCloud analysis
on:
  push:
    branches:
      - master
      - main
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'
jobs:
  run-dotnet-sonarqube-analysis:
    name: Run .NET SonarQube Analysis
    runs-on: ubuntu-latest
    
    env:
      DOTNET_NOLOGO: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      NUGET_PACKAGES: ${{ github.workspace }}/.github/nuget-packages
      PROJECT_KEY: 'DotnetTemplateGithubActionsSonarScan'
      ORGANIZATION: 'petro-kolosov-own-repos'
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '11'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p ./.sonar/scanner
          chmod a+rwx ./.sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

      - name: Analyze project
        shell: bash
        run: |
          chmod 777 scripts/run-sonarcloud-dotnet.sh
          ./scripts/run-sonarcloud-dotnet.sh